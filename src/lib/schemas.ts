
import { z } from 'zod';

// Service Schema
export const ServiceSchema = z.object({
  id: z.string().min(1, "ID is required."), // In a real app, this might be a UUID generated by the DB
  name: z.string().min(1, "Service name is required"),
  duration: z.string().min(1, "Duration is required (e.g., '45 min')"),
  price: z.string().min(1, "Price is required (e.g., '$50')"), // Consider a more structured price object in a real app
  category: z.string().min(1, "Category is required"),
});

export type Service = z.infer<typeof ServiceSchema>;

// Placeholder for other schemas we'll define later
// export const StaffSchema = z.object({...});
// export type StaffMember = z.infer<typeof StaffSchema>;

// export const BookingSchema = z.object({...});
// export type Booking = z.infer<typeof BookingSchema>;

// export const UserSchema = z.object({...});
// export type User = z.infer<typeof UserSchema>;
